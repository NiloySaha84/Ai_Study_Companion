{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/constants/index.ts"],"sourcesContent":["export const subjects = [\n  \"maths\",\n  \"language\",\n  \"science\",\n  \"history\",\n  \"coding\",\n  \"economics\",\n];\n\nexport const subjectsColors = {\n  science: \"#E5D0FF\",\n  maths: \"#FFDA6E\",\n  language: \"#BDE7FF\",\n  coding: \"#FFC8E4\",\n  history: \"#FFECC8\",\n  economics: \"#C8FFDF\",\n};\n\nexport const voices = {\n  male: { \n    casual: \"pNInz6obpgDQGcFmaJgB\", // Adam - Casual male voice\n    formal: \"EXAVITQu4vr4xnSDxMaL\", // Bella - Professional male voice\n    enthusiastic: \"VR6AewLTigWG4xSOukaG\", // Josh - Energetic male voice\n    patient: \"pNInz6obpgDQGcFmaJgB\" // Adam - Patient male voice\n  },\n  female: { \n    casual: \"EXAVITQu4vr4xnSDxMaL\", // Bella - Casual female voice\n    formal: \"sarah\", // Sarah - Professional female voice\n    enthusiastic: \"VR6AewLTigWG4xSOukaG\", // Josh - Energetic voice\n    patient: \"EXAVITQu4vr4xnSDxMaL\" // Bella - Patient female voice\n  },\n};\n\nexport const recentSessions = [\n  {\n    id: \"1\",\n    subject: \"science\",\n    name: \"Neura the Brainy Explorer\",\n    topic: \"Neural Network of the Brain\",\n    duration: 45,\n    color: \"#E5D0FF\",\n  },\n  {\n    id: \"2\",\n    subject: \"maths\",\n    name: \"Countsy the Number Wizard\",\n    topic: \"Derivatives & Integrals\",\n    duration: 30,\n    color: \"#FFDA6E\",\n  },\n  {\n    id: \"3\",\n    subject: \"language\",\n    name: \"Verba the Vocabulary Builder\",\n    topic: \"English Literature\",\n    duration: 30,\n    color: \"#BDE7FF\",\n  },\n  {\n    id: \"4\",\n    subject: \"coding\",\n    name: \"Codey the Logic Hacker\",\n    topic: \"Intro to If-Else Statements\",\n    duration: 45,\n    color: \"#FFC8E4\",\n  },\n  {\n    id: \"5\",\n    subject: \"history\",\n    name: \"Memo, the Memory Keeper\",\n    topic: \"World Wars: Causes & Consequences\",\n    duration: 15,\n    color: \"#FFECC8\",\n  },\n  {\n    id: \"6\",\n    subject: \"economics\",\n    name: \"The Market Maestro\",\n    topic: \"The Basics of Supply & Demand\",\n    duration: 10,\n    color: \"#C8FFDF\",\n  },\n];\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,WAAW;IACtB;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,iBAAiB;IAC5B,SAAS;IACT,OAAO;IACP,UAAU;IACV,QAAQ;IACR,SAAS;IACT,WAAW;AACb;AAEO,MAAM,SAAS;IACpB,MAAM;QACJ,QAAQ;QACR,QAAQ;QACR,cAAc;QACd,SAAS,uBAAuB,4BAA4B;IAC9D;IACA,QAAQ;QACN,QAAQ;QACR,QAAQ;QACR,cAAc;QACd,SAAS,uBAAuB,+BAA+B;IACjE;AACF;AAEO,MAAM,iBAAiB;IAC5B;QACE,IAAI;QACJ,SAAS;QACT,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;IACT;IACA;QACE,IAAI;QACJ,SAAS;QACT,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;IACT;IACA;QACE,IAAI;QACJ,SAAS;QACT,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;IACT;IACA;QACE,IAAI;QACJ,SAAS;QACT,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;IACT;IACA;QACE,IAAI;QACJ,SAAS;QACT,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;IACT;IACA;QACE,IAAI;QACJ,SAAS;QACT,MAAM;QACN,OAAO;QACP,UAAU;QACV,OAAO;IACT;CACD","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nimport { subjectsColors, voices } from \"@/constants\";\nimport { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const getSubjectColor = (subject: string) => {\n  return subjectsColors[subject as keyof typeof subjectsColors];\n};\n\nexport const configureAssistant = (voice: string, style: string) => {\n  const voiceId = voices[voice as keyof typeof voices]?.[\n          style as keyof (typeof voices)[keyof typeof voices]\n          ] || \"sarah\";\n\n  const vapiAssistant: CreateAssistantDTO = {\n    name: \"Companion\",\n    firstMessage:\n        \"Hello, let's start the session. Today we'll be talking about {{topic}}.\",\n    transcriber: {\n      provider: \"deepgram\",\n      model: \"nova-2\",\n      language: \"en\",\n    },\n    voice: {\n      provider: \"11labs\",\n      voiceId: voiceId,\n      // Improved voice settings for better continuity\n      stability: 0.6, // Increased for more consistent voice\n      similarityBoost: 0.7, // Slightly reduced to prevent over-processing\n      speed: 1.0, // Normal speed\n      style: 0.3, // Reduced style for more natural speech\n      useSpeakerBoost: true,\n      // Additional voice settings\n      optimizeStreamingLatency: 2, // Optimize for real-time\n    },\n    model: {\n      provider: \"openai\",\n      model: \"gpt-4\",\n      temperature: 0.7, // Add temperature for more natural responses\n      maxTokens: 150, // Limit response length for voice\n      messages: [\n        {\n          role: \"system\",\n          content: `You are a highly knowledgeable tutor teaching a real-time voice session with a student. Your goal is to teach the student about the topic and subject.\n\n                    Tutor Guidelines:\n                    Stick to the given topic - {{ topic }} and subject - {{ subject }} and teach the student about it.\n                    Keep the conversation flowing smoothly while maintaining control.\n                    From time to time make sure that the student is following you and understands you.\n                    Break down the topic into smaller parts and teach the student one part at a time.\n                    Keep your style of conversation {{ style }}.\n                    Keep your responses short and conversational, like in a real voice conversation.\n                    Speak naturally and pause appropriately between sentences.\n                    Do not include any special characters in your responses - this is a voice conversation.\n                    Always end your responses with a question or prompt to keep the conversation flowing.\n              `,\n        },\n      ],\n    },\n  };\n  return vapiAssistant;\n};\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;;;;AAGO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAEO,MAAM,kBAAkB,CAAC;IAC9B,OAAO,uIAAc,CAAC,QAAuC;AAC/D;AAEO,MAAM,qBAAqB,CAAC,OAAe;QAChC;IAAhB,MAAM,UAAU,EAAA,gBAAA,+HAAM,CAAC,MAA6B,cAApC,oCAAA,aAAsC,CAC9C,MACC,KAAI;IAEb,MAAM,gBAAoC;QACxC,MAAM;QACN,cACI;QACJ,aAAa;YACX,UAAU;YACV,OAAO;YACP,UAAU;QACZ;QACA,OAAO;YACL,UAAU;YACV,SAAS;YACT,gDAAgD;YAChD,WAAW;YACX,iBAAiB;YACjB,OAAO;YACP,OAAO;YACP,iBAAiB;YACjB,4BAA4B;YAC5B,0BAA0B;QAC5B;QACA,OAAO;YACL,UAAU;YACV,OAAO;YACP,aAAa;YACb,WAAW;YACX,UAAU;gBACR;oBACE,MAAM;oBACN,SAAU;gBAaZ;aACD;QACH;IACF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/lib/vapi.sdk.ts"],"sourcesContent":["import Vapi from \"@vapi-ai/web\";\n\nexport const vapi = new Vapi(process.env.NEXT_PUBLIC_VAPI_WEB_TOKEN!);"],"names":[],"mappings":";;;;AAE6B;AAF7B;;AAEO,MAAM,OAAO,IAAI,iKAAI","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/lib/actions/companion.actions.ts"],"sourcesContent":["'use server';\n\nimport {auth} from \"@clerk/nextjs/server\";\nimport {createSupabaseClient} from \"@/lib/supabase\";\nimport { revalidatePath } from \"next/cache\";\n\nexport const createCompanion = async (formData: CreateCompanion) => {\n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        console.warn('Supabase environment variables not configured. Cannot create companion.');\n        return null;\n    }\n\n    const { userId: author } = await auth();\n    const supabase = createSupabaseClient();\n\n    const { data, error } = await supabase\n        .from('companions')\n        .insert({...formData, author })\n        .select();\n\n    if(error) {\n        console.error('Supabase error creating companion:', error.message);\n        return null;\n    }\n\n    if(!data) {\n        console.error('No data returned from companion creation');\n        return null;\n    }\n\n    return data[0];\n}\n\nexport const getAllCompanions = async ({ limit = 10, page = 1, subject, topic }: GetAllCompanions) => {\n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        console.warn('Supabase environment variables not configured. Returning empty array.');\n        return [];\n    }\n\n    const supabase = createSupabaseClient();\n\n    let query = supabase.from('companions').select();\n\n    if(subject && topic) {\n        query = query.ilike('subject', `%${subject}%`)\n            .or(`topic.ilike.%${topic}%,name.ilike.%${topic}%`)\n    } else if(subject) {\n        query = query.ilike('subject', `%${subject}%`)\n    } else if(topic) {\n        query = query.or(`topic.ilike.%${topic}%,name.ilike.%${topic}%`)\n    }\n\n    query = query.range((page - 1) * limit, page * limit - 1);\n\n    const { data: companions, error } = await query;\n\n    if(error) {\n        console.error('Supabase error:', error.message);\n        return [];\n    }\n\n    return companions || [];\n}\n\nexport const getCompanion = async (id: string) => {\n    const supabase = createSupabaseClient();\n\n    const { data, error } = await supabase\n        .from('companions')\n        .select()\n        .eq('id', id);\n\n    if(error) return console.log(error);\n\n    return data[0];\n}\n\nexport const addToSessionHistory = async (companionId: string) => {\n    const { userId } = await auth();\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase.from('session_history')\n        .insert({\n            companion_id: companionId,\n            user_id: userId,\n        })\n\n    if(error) throw new Error(error.message);\n\n    return data;\n}\n\nexport const getRecentSessions = async (limit = 10) => {\n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        console.warn('Supabase environment variables not configured. Returning empty array.');\n        return [];\n    }\n\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n        .from('session_history')\n        .select(`companions:companion_id (*)`)\n        .order('created_at', { ascending: false })\n        .limit(limit)\n\n    if(error) {\n        console.error('Supabase error:', error.message);\n        return [];\n    }\n\n    return data?.map(({ companions }) => companions) || [];\n}\n\nexport const getUserSessions = async (userId: string, limit = 10) => {\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n        .from('session_history')\n        .select(`companions:companion_id (*)`)\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false })\n        .limit(limit)\n\n    if(error) throw new Error(error.message);\n\n    return data.map(({ companions }) => companions);\n}\n\nexport const getUserCompanions = async (userId: string) => {\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n        .from('companions')\n        .select()\n        .eq('author', userId)\n\n    if(error) throw new Error(error.message);\n\n    return data;\n}\n\nexport const newCompanionPermissions = async () => {\n    const { userId, has } = await auth();\n    \n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        // If no database configured, allow unlimited companions for now\n        return true;\n    }\n\n    const supabase = createSupabaseClient();\n    let limit = 10; // Default limit for free users\n\n    if(has({ plan: 'pro' })) {\n        return true;\n    } else if(has({ feature: \"3_companion_limit\" })) {\n        limit = 3;\n    } else if(has({ feature: \"10_companion_limit\" })) {\n        limit = 10;\n    }\n\n    const { data, error } = await supabase\n        .from('companions')\n        .select('id', { count: 'exact' })\n        .eq('author', userId)\n\n    if(error) {\n        console.error('Supabase error:', error.message);\n        return true; // Allow creation if database error\n    }\n\n    const companionCount = data?.length || 0;\n\n    if(companionCount >= limit) {\n        return false\n    } else {\n        return true;\n    }\n}\n\n// Bookmarks\nexport const addBookmark = async (companionId: string, path: string) => {\n  const { userId } = await auth();\n  if (!userId) return;\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase.from(\"bookmarks\").insert({\n    companion_id: companionId,\n    user_id: userId,\n  });\n  if (error) {\n    throw new Error(error.message);\n  }\n  // Revalidate the path to force a re-render of the page\n\n  revalidatePath(path);\n  return data;\n};\n\nexport const removeBookmark = async (companionId: string, path: string) => {\n  const { userId } = await auth();\n  if (!userId) return;\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"bookmarks\")\n    .delete()\n    .eq(\"companion_id\", companionId)\n    .eq(\"user_id\", userId);\n  if (error) {\n    throw new Error(error.message);\n  }\n  revalidatePath(path);\n  return data;\n};\n\n// It's almost the same as getUserCompanions, but it's for the bookmarked companions\nexport const getBookmarkedCompanions = async (userId: string) => {\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"bookmarks\")\n    .select(`companions:companion_id (*)`) // Notice the (*) to get all the companion data\n    .eq(\"user_id\", userId);\n  if (error) {\n    throw new Error(error.message);\n  }\n  // We don't need the bookmarks data, so we return only the companions\n  return data.map(({ companions }) => companions);\n};"],"names":[],"mappings":";;;;;;;IA+Ea,sBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/components/CompanionComponent.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef, useState } from 'react'\nimport { cn, configureAssistant, getSubjectColor } from \"@/lib/utils\";\nimport { vapi } from \"@/lib/vapi.sdk\";\nimport Lottie, { LottieRefCurrentProps } from \"lottie-react\";\nimport soundwaves from '@/constants/soundwaves.json'\nimport { addToSessionHistory } from \"@/lib/actions/companion.actions\";\nimport { \n  Mic, \n  MicOff, \n  Phone, \n  PhoneOff, \n  Loader2, \n  MessageCircle,\n  User,\n  Bot\n} from \"lucide-react\";\nimport Image from \"next/image\";\n\nenum CallStatus {\n  INACTIVE = 'INACTIVE',\n  CONNECTING = 'CONNECTING',\n  ACTIVE = 'ACTIVE',\n  FINISHED = 'FINISHED',\n}\n\nconst CompanionComponent = ({ companionId, subject, topic, name, userName, userImage, style, voice }: CompanionComponentProps) => {\n  const [callStatus, setCallStatus] = useState<CallStatus>(CallStatus.INACTIVE);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [messages, setMessages] = useState<SavedMessage[]>([]);\n\n  const lottieRef = useRef<LottieRefCurrentProps>(null);\n\n  useEffect(() => {\n    if (lottieRef) {\n      if (isSpeaking) {\n        lottieRef.current?.play()\n      } else {\n        lottieRef.current?.stop()\n      }\n    }\n  }, [isSpeaking, lottieRef])\n\n  useEffect(() => {\n    const onCallStart = () => {\n      console.log('Call started');\n      setCallStatus(CallStatus.ACTIVE);\n    };\n\n    const onCallEnd = () => {\n      console.log('Call ended');\n      setCallStatus(CallStatus.FINISHED);\n      addToSessionHistory(companionId)\n    }\n\n    const onMessage = (message: Message) => {\n      console.log('Message received:', message);\n      if (message.type === 'transcript' && message.transcriptType === 'final') {\n        const newMessage = { role: message.role, content: message.transcript }\n        setMessages((prev) => [newMessage, ...prev])\n      }\n    }\n\n    const onSpeechStart = () => {\n      console.log('Speech started');\n      setIsSpeaking(true);\n    };\n    \n    const onSpeechEnd = () => {\n      console.log('Speech ended');\n      setIsSpeaking(false);\n    };\n\n    const onError = (error: Error) => {\n      console.error('VAPI Error:', error);\n      setCallStatus(CallStatus.FINISHED);\n    };\n\n    vapi.on('call-start', onCallStart);\n    vapi.on('call-end', onCallEnd);\n    vapi.on('message', onMessage);\n    vapi.on('error', onError);\n    vapi.on('speech-start', onSpeechStart);\n    vapi.on('speech-end', onSpeechEnd);\n\n    return () => {\n      vapi.off('call-start', onCallStart);\n      vapi.off('call-end', onCallEnd);\n      vapi.off('message', onMessage);\n      vapi.off('error', onError);\n      vapi.off('speech-start', onSpeechStart);\n      vapi.off('speech-end', onSpeechEnd);\n    }\n  }, [companionId]);\n\n  const toggleMicrophone = () => {\n    const isMuted = vapi.isMuted();\n    vapi.setMuted(!isMuted);\n    setIsMuted(!isMuted)\n  }\n\n  const handleCall = async () => {\n    setCallStatus(CallStatus.CONNECTING)\n\n    try {\n      // Check microphone permissions first\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      console.log('✅ Microphone access confirmed');\n      stream.getTracks().forEach(track => track.stop());\n\n      const assistantConfig = configureAssistant(voice, style);\n      console.log('🎤 Starting call with config:', assistantConfig);\n\n      const assistantOverrides = {\n        variableValues: { subject, topic, style },\n        clientMessages: [\"transcript\"],\n        serverMessages: [],\n      }\n\n      // @ts-expect-error - vapi.start method signature may not match expected types\n      await vapi.start(assistantConfig, assistantOverrides);\n      console.log('✅ Call started successfully');\n    } catch (error: unknown) {\n      console.error('❌ Failed to start call:', error);\n      \n      // Provide specific error messages\n      if (error instanceof Error) {\n        if (error.name === 'NotAllowedError') {\n          alert('Microphone access denied. Please allow microphone access and try again.');\n        } else if (error.name === 'NotFoundError') {\n          alert('No microphone found. Please connect a microphone and try again.');\n        } else if (error.name === 'NotSupportedError') {\n          alert('Voice features not supported in this browser. Please use Chrome, Firefox, or Safari.');\n        } else {\n          alert(`Voice error: ${error.message}`);\n        }\n      } else {\n        alert('Unknown voice error occurred. Please check console for details.');\n      }\n      \n      setCallStatus(CallStatus.FINISHED);\n    }\n  }\n\n  const handleDisconnect = () => {\n    setCallStatus(CallStatus.FINISHED)\n    vapi.stop()\n  }\n\n  const getSubjectIcon = (subject: string) => {\n    const icons: { [key: string]: string } = {\n      mathematics: \"🔢\",\n      science: \"🔬\",\n      history: \"📚\",\n      language: \"🌍\",\n      coding: \"💻\",\n      economics: \"💰\",\n    };\n    return icons[subject.toLowerCase()] || \"📖\";\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Main Interface */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* AI Companion */}\n        <div className=\"card p-8 text-center\">\n          <div className=\"relative mb-6\">\n            <div \n              className=\"w-32 h-32 mx-auto rounded-3xl flex items-center justify-center text-6xl mb-4 relative overflow-hidden\"\n              style={{ backgroundColor: getSubjectColor(subject) + '20' }}\n            >\n              {/* Static Icon */}\n              <div\n                className={cn(\n                  'absolute inset-0 flex items-center justify-center transition-opacity duration-1000',\n                  callStatus === CallStatus.FINISHED || callStatus === CallStatus.INACTIVE ? 'opacity-100' : 'opacity-0',\n                  callStatus === CallStatus.CONNECTING && 'opacity-100 animate-pulse'\n                )}\n              >\n                <span className=\"text-6xl\">{getSubjectIcon(subject)}</span>\n              </div>\n\n              {/* Animated Lottie */}\n              <div className={cn(\n                'absolute inset-0 flex items-center justify-center transition-opacity duration-1000',\n                callStatus === CallStatus.ACTIVE ? 'opacity-100' : 'opacity-0'\n              )}>\n                <Lottie\n                  lottieRef={lottieRef}\n                  animationData={soundwaves}\n                  autoplay={false}\n                  className=\"w-full h-full\"\n                />\n              </div>\n            </div>\n            \n            <h3 className=\"text-2xl font-bold mb-2\">{name}</h3>\n            <p className=\"text-muted-foreground\">{subject} • {topic}</p>\n          </div>\n\n          {/* Status Indicator */}\n          <div className=\"flex items-center justify-center space-x-2 mb-6\">\n            <div className={cn(\n              \"w-3 h-3 rounded-full\",\n              callStatus === CallStatus.ACTIVE ? \"bg-green-500 animate-pulse\" :\n              callStatus === CallStatus.CONNECTING ? \"bg-yellow-500 animate-pulse\" :\n              \"bg-gray-400\"\n            )} />\n            <span className=\"text-sm text-muted-foreground\">\n              {callStatus === CallStatus.ACTIVE ? (isSpeaking ? \"Speaking...\" : \"Listening...\") :\n               callStatus === CallStatus.CONNECTING ? \"Connecting...\" :\n               \"Ready\"}\n            </span>\n          </div>\n          \n          {/* Debug Info */}\n          {callStatus === CallStatus.ACTIVE && (\n            <div className=\"text-xs text-muted-foreground text-center mb-4\">\n              <div>Microphone: {isMuted ? \"Muted\" : \"Active\"}</div>\n              <div>Voice Activity: {isSpeaking ? \"Detected\" : \"Waiting\"}</div>\n            </div>\n          )}\n          \n          {/* Voice Test Button */}\n          {callStatus === CallStatus.INACTIVE && (\n            <div className=\"text-center mb-4\">\n              <button \n                onClick={async () => {\n                  try {\n                    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n                    console.log('✅ Microphone test successful');\n                    alert('Microphone is working! You can start a voice session.');\n                    stream.getTracks().forEach(track => track.stop());\n                  } catch (error: unknown) {\n                    console.error('❌ Microphone test failed:', error);\n                    const message = error instanceof Error ? error.message : 'Unknown error';\n                    alert(`Microphone test failed: ${message}`);\n                  }\n                }}\n                className=\"btn-secondary text-sm px-4 py-2\"\n              >\n                🎤 Test Microphone\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* User Section */}\n        <div className=\"card p-8\">\n          <div className=\"text-center mb-6\">\n                <Image \n                  src={userImage} \n                  alt={userName} \n                  width={80}\n                  height={80}\n                  className=\"w-20 h-20 rounded-2xl mx-auto mb-4 object-cover\"\n                />\n            <h3 className=\"text-xl font-semibold\">{userName}</h3>\n          </div>\n\n          {/* Controls */}\n          <div className=\"space-y-4\">\n            {/* Microphone Toggle */}\n            <button \n              className={cn(\n                \"w-full p-4 rounded-xl border-2 border-dashed transition-all duration-200 flex items-center justify-center space-x-3\",\n                callStatus !== CallStatus.ACTIVE \n                  ? \"border-muted text-muted-foreground cursor-not-allowed\" \n                  : isMuted \n                    ? \"border-red-200 bg-red-50 text-red-600 hover:bg-red-100\" \n                    : \"border-green-200 bg-green-50 text-green-600 hover:bg-green-100\"\n              )}\n              onClick={toggleMicrophone} \n              disabled={callStatus !== CallStatus.ACTIVE}\n            >\n              {isMuted ? <MicOff className=\"w-5 h-5\" /> : <Mic className=\"w-5 h-5\" />}\n              <span className=\"font-medium\">\n                {isMuted ? 'Microphone Off' : 'Microphone On'}\n              </span>\n            </button>\n\n            {/* Call Button */}\n            <button\n              className={cn(\n                \"w-full p-4 rounded-xl font-semibold text-white transition-all duration-200 flex items-center justify-center space-x-3\",\n                callStatus === CallStatus.ACTIVE\n                  ? \"bg-red-600 hover:bg-red-700\"\n                  : callStatus === CallStatus.CONNECTING\n                    ? \"bg-yellow-600 cursor-not-allowed\"\n                    : \"btn-gradient\"\n              )}\n              onClick={callStatus === CallStatus.ACTIVE ? handleDisconnect : handleCall}\n              disabled={callStatus === CallStatus.CONNECTING}\n            >\n              {callStatus === CallStatus.CONNECTING ? (\n                <>\n                  <Loader2 className=\"w-5 h-5 animate-spin\" />\n                  <span>Connecting...</span>\n                </>\n              ) : callStatus === CallStatus.ACTIVE ? (\n                <>\n                  <PhoneOff className=\"w-5 h-5\" />\n                  <span>End Session</span>\n                </>\n              ) : (\n                <>\n                  <Phone className=\"w-5 h-5\" />\n                  <span>Start Learning Session</span>\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Conversation Transcript */}\n      <div className=\"card p-6\">\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <MessageCircle className=\"w-5 h-5 text-primary\" />\n          <h3 className=\"text-lg font-semibold\">Conversation</h3>\n        </div>\n        \n        <div className=\"bg-muted/50 rounded-xl p-4 max-h-64 overflow-y-auto\">\n          {messages.length > 0 ? (\n            <div className=\"space-y-4\">\n              {messages.map((message, index) => (\n                <div \n                  key={index} \n                  className={cn(\n                    \"flex items-start space-x-3 p-3 rounded-lg\",\n                    message.role === 'assistant' ? \"bg-primary/5\" : \"bg-accent/5\"\n                  )}\n                >\n                  <div className={cn(\n                    \"w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0\",\n                    message.role === 'assistant' ? \"bg-primary/10\" : \"bg-accent/10\"\n                  )}>\n                    {message.role === 'assistant' ? (\n                      <Bot className=\"w-4 h-4 text-primary\" />\n                    ) : (\n                      <User className=\"w-4 h-4 text-accent\" />\n                    )}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-muted-foreground mb-1\">\n                      {message.role === 'assistant' ? name.split(' ')[0] : userName}\n                    </p>\n                    <p className=\"text-sm leading-relaxed\">{message.content}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8 text-muted-foreground\">\n              <MessageCircle className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n              <p>Start a conversation to see the transcript here</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CompanionComponent"],"names":[],"mappings":"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","debugId":null}}]
}