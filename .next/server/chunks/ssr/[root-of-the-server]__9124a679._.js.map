{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/lib/vapi.sdk.ts"],"sourcesContent":["import Vapi from \"@vapi-ai/web\";\n\nexport const vapi = new Vapi(process.env.NEXT_PUBLIC_VAPI_WEB_TOKEN!);"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,OAAO,IAAI,+NAAI","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/lib/actions/companion.actions.ts"],"sourcesContent":["'use server';\n\nimport {auth} from \"@clerk/nextjs/server\";\nimport {createSupabaseClient} from \"@/lib/supabase\";\nimport { revalidatePath } from \"next/cache\";\n\nexport const createCompanion = async (formData: CreateCompanion) => {\n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        console.warn('Supabase environment variables not configured. Cannot create companion.');\n        return null;\n    }\n\n    const { userId: author } = await auth();\n    const supabase = createSupabaseClient();\n\n    const { data, error } = await supabase\n        .from('companions')\n        .insert({...formData, author })\n        .select();\n\n    if(error) {\n        console.error('Supabase error creating companion:', error.message);\n        return null;\n    }\n\n    if(!data) {\n        console.error('No data returned from companion creation');\n        return null;\n    }\n\n    return data[0];\n}\n\nexport const getAllCompanions = async ({ limit = 10, page = 1, subject, topic }: GetAllCompanions) => {\n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        console.warn('Supabase environment variables not configured. Returning empty array.');\n        return [];\n    }\n\n    const supabase = createSupabaseClient();\n\n    let query = supabase.from('companions').select();\n\n    if(subject && topic) {\n        query = query.ilike('subject', `%${subject}%`)\n            .or(`topic.ilike.%${topic}%,name.ilike.%${topic}%`)\n    } else if(subject) {\n        query = query.ilike('subject', `%${subject}%`)\n    } else if(topic) {\n        query = query.or(`topic.ilike.%${topic}%,name.ilike.%${topic}%`)\n    }\n\n    query = query.range((page - 1) * limit, page * limit - 1);\n\n    const { data: companions, error } = await query;\n\n    if(error) {\n        console.error('Supabase error:', error.message);\n        return [];\n    }\n\n    return companions || [];\n}\n\nexport const getCompanion = async (id: string) => {\n    const supabase = createSupabaseClient();\n\n    const { data, error } = await supabase\n        .from('companions')\n        .select()\n        .eq('id', id);\n\n    if(error) return console.log(error);\n\n    return data[0];\n}\n\nexport const addToSessionHistory = async (companionId: string) => {\n    const { userId } = await auth();\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase.from('session_history')\n        .insert({\n            companion_id: companionId,\n            user_id: userId,\n        })\n\n    if(error) throw new Error(error.message);\n\n    return data;\n}\n\nexport const getRecentSessions = async (limit = 10) => {\n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        console.warn('Supabase environment variables not configured. Returning empty array.');\n        return [];\n    }\n\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n        .from('session_history')\n        .select(`companions:companion_id (*)`)\n        .order('created_at', { ascending: false })\n        .limit(limit)\n\n    if(error) {\n        console.error('Supabase error:', error.message);\n        return [];\n    }\n\n    return data?.map(({ companions }) => companions) || [];\n}\n\nexport const getUserSessions = async (userId: string, limit = 10) => {\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n        .from('session_history')\n        .select(`companions:companion_id (*)`)\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false })\n        .limit(limit)\n\n    if(error) throw new Error(error.message);\n\n    return data.map(({ companions }) => companions);\n}\n\nexport const getUserCompanions = async (userId: string) => {\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n        .from('companions')\n        .select()\n        .eq('author', userId)\n\n    if(error) throw new Error(error.message);\n\n    return data;\n}\n\nexport const newCompanionPermissions = async () => {\n    const { userId, has } = await auth();\n    \n    // Check if Supabase environment variables are configured\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n        // If no database configured, allow unlimited companions for now\n        return true;\n    }\n\n    const supabase = createSupabaseClient();\n    let limit = 10; // Default limit for free users\n\n    if(has({ plan: 'pro' })) {\n        return true;\n    } else if(has({ feature: \"3_companion_limit\" })) {\n        limit = 3;\n    } else if(has({ feature: \"10_companion_limit\" })) {\n        limit = 10;\n    }\n\n    const { data, error } = await supabase\n        .from('companions')\n        .select('id', { count: 'exact' })\n        .eq('author', userId)\n\n    if(error) {\n        console.error('Supabase error:', error.message);\n        return true; // Allow creation if database error\n    }\n\n    const companionCount = data?.length || 0;\n\n    if(companionCount >= limit) {\n        return false\n    } else {\n        return true;\n    }\n}\n\n// Bookmarks\nexport const addBookmark = async (companionId: string, path: string) => {\n  const { userId } = await auth();\n  if (!userId) return;\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase.from(\"bookmarks\").insert({\n    companion_id: companionId,\n    user_id: userId,\n  });\n  if (error) {\n    throw new Error(error.message);\n  }\n  // Revalidate the path to force a re-render of the page\n\n  revalidatePath(path);\n  return data;\n};\n\nexport const removeBookmark = async (companionId: string, path: string) => {\n  const { userId } = await auth();\n  if (!userId) return;\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"bookmarks\")\n    .delete()\n    .eq(\"companion_id\", companionId)\n    .eq(\"user_id\", userId);\n  if (error) {\n    throw new Error(error.message);\n  }\n  revalidatePath(path);\n  return data;\n};\n\n// It's almost the same as getUserCompanions, but it's for the bookmarked companions\nexport const getBookmarkedCompanions = async (userId: string) => {\n  const supabase = createSupabaseClient();\n  const { data, error } = await supabase\n    .from(\"bookmarks\")\n    .select(`companions:companion_id (*)`) // Notice the (*) to get all the companion data\n    .eq(\"user_id\", userId);\n  if (error) {\n    throw new Error(error.message);\n  }\n  // We don't need the bookmarks data, so we return only the companions\n  return data.map(({ companions }) => companions);\n};"],"names":[],"mappings":";;;;;;;IA+Ea,sBAAA,WAAA,GAAA,IAAA,8WAAA,EAAA,8CAAA,mWAAA,EAAA,KAAA,GAAA,yWAAA,EAAA","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/niloysaha/Documents/Documents%20-%20Niloy%E2%80%99s%20MacBook%20Air/Udemy%20Web%20dev%20proj/AI%20Study%20Companion/components/CompanionComponent.tsx"],"sourcesContent":["'use client';\n\nimport {useEffect, useRef, useState} from 'react'\nimport {cn, configureAssistant, getSubjectColor} from \"@/lib/utils\";\nimport {vapi} from \"@/lib/vapi.sdk\";\nimport Image from \"next/image\";\nimport Lottie, {LottieRefCurrentProps} from \"lottie-react\";\nimport soundwaves from '@/constants/soundwaves.json'\nimport {addToSessionHistory} from \"@/lib/actions/companion.actions\";\n\nenum CallStatus {\n    INACTIVE = 'INACTIVE',\n    CONNECTING = 'CONNECTING',\n    ACTIVE = 'ACTIVE',\n    FINISHED = 'FINISHED',\n}\n\nconst CompanionComponent = ({ companionId, subject, topic, name, userName, userImage, style, voice }: CompanionComponentProps) => {\n    const [callStatus, setCallStatus] = useState<CallStatus>(CallStatus.INACTIVE);\n    const [isSpeaking, setIsSpeaking] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [messages, setMessages] = useState<SavedMessage[]>([]);\n\n    const lottieRef = useRef<LottieRefCurrentProps>(null);\n\n    useEffect(() => {\n        if(lottieRef) {\n            if(isSpeaking) {\n                lottieRef.current?.play()\n            } else {\n                lottieRef.current?.stop()\n            }\n        }\n    }, [isSpeaking, lottieRef])\n\n    useEffect(() => {\n        const onCallStart = () => setCallStatus(CallStatus.ACTIVE);\n\n        const onCallEnd = () => {\n            setCallStatus(CallStatus.FINISHED);\n            addToSessionHistory(companionId)\n        }\n\n        const onMessage = (message: Message) => {\n            if(message.type === 'transcript' && message.transcriptType === 'final') {\n                const newMessage= { role: message.role, content: message.transcript}\n                setMessages((prev) => [newMessage, ...prev])\n            }\n        }\n\n        const onSpeechStart = () => setIsSpeaking(true);\n        const onSpeechEnd = () => setIsSpeaking(false);\n\n        const onError = (error: Error) => console.log('Error', error);\n\n        vapi.on('call-start', onCallStart);\n        vapi.on('call-end', onCallEnd);\n        vapi.on('message', onMessage);\n        vapi.on('error', onError);\n        vapi.on('speech-start', onSpeechStart);\n        vapi.on('speech-end', onSpeechEnd);\n\n        return () => {\n            vapi.off('call-start', onCallStart);\n            vapi.off('call-end', onCallEnd);\n            vapi.off('message', onMessage);\n            vapi.off('error', onError);\n            vapi.off('speech-start', onSpeechStart);\n            vapi.off('speech-end', onSpeechEnd);\n        }\n    }, []);\n\n    const toggleMicrophone = () => {\n        const isMuted = vapi.isMuted();\n        vapi.setMuted(!isMuted);\n        setIsMuted(!isMuted)\n    }\n\n    const handleCall = async () => {\n        setCallStatus(CallStatus.CONNECTING)\n\n        const assistantOverrides = {\n            variableValues: { subject, topic, style },\n            clientMessages: [\"transcript\"],\n            serverMessages: [],\n        }\n\n        // @ts-expect-error\n        vapi.start(configureAssistant(voice, style), assistantOverrides)\n    }\n\n    const handleDisconnect = () => {\n        setCallStatus(CallStatus.FINISHED)\n        vapi.stop()\n    }\n\n    return (\n        <section className=\"flex flex-col h-[70vh]\">\n            <section className=\"flex gap-8 max-sm:flex-col\">\n                <div className=\"companion-section\">\n                    <div className=\"companion-avatar\" style={{ backgroundColor: getSubjectColor(subject)}}>\n                        <div\n                            className={\n                            cn(\n                                'absolute transition-opacity duration-1000', callStatus === CallStatus.FINISHED || callStatus === CallStatus.INACTIVE ? 'opacity-1001' : 'opacity-0', callStatus === CallStatus.CONNECTING && 'opacity-100 animate-pulse'\n                            )\n                        }>\n                            <Image src={`/icons/${subject}.svg`} alt={subject} width={150} height={150} className=\"max-sm:w-fit\" />\n                        </div>\n\n                        <div className={cn('absolute transition-opacity duration-1000', callStatus === CallStatus.ACTIVE ? 'opacity-100': 'opacity-0')}>\n                            <Lottie\n                                lottieRef={lottieRef}\n                                animationData={soundwaves}\n                                autoplay={false}\n                                className=\"companion-lottie\"\n                            />\n                        </div>\n                    </div>\n                    <p className=\"font-bold text-2xl\">{name}</p>\n                </div>\n\n                <div className=\"user-section\">\n                    <div className=\"user-avatar\">\n                        <Image src={userImage} alt={userName} width={130} height={130} className=\"rounded-lg\" />\n                        <p className=\"font-bold text-2xl\">\n                            {userName}\n                        </p>\n                    </div>\n                    <button className=\"btn-mic\" onClick={toggleMicrophone} disabled={callStatus !== CallStatus.ACTIVE}>\n                        <Image src={isMuted ? '/icons/mic-off.svg' : '/icons/mic-on.svg'} alt=\"mic\" width={36} height={36} />\n                        <p className=\"max-sm:hidden\">\n                            {isMuted ? 'Turn on microphone' : 'Turn off microphone'}\n                        </p>\n                    </button>\n                    <button className={cn('rounded-lg py-2 cursor-pointer transition-colors w-full text-white', callStatus ===CallStatus.ACTIVE ? 'bg-red-700' : 'bg-primary', callStatus === CallStatus.CONNECTING && 'animate-pulse')} onClick={callStatus === CallStatus.ACTIVE ? handleDisconnect : handleCall}>\n                        {callStatus === CallStatus.ACTIVE\n                        ? \"End Session\"\n                        : callStatus === CallStatus.CONNECTING\n                            ? 'Connecting'\n                        : 'Start Session'\n                        }\n                    </button>\n                </div>\n            </section>\n\n            <section className=\"transcript\">\n                <div className=\"transcript-message no-scrollbar\">\n                    {messages.map((message, index) => {\n                        if(message.role === 'assistant') {\n                            return (\n                                <p key={index} className=\"max-sm:text-sm\">\n                                    {\n                                        name\n                                            .split(' ')[0]\n                                            .replace('/[.,]/g, ','')\n                                    }: {message.content}\n                                </p>\n                            )\n                        } else {\n                           return <p key={index} className=\"text-primary max-sm:text-sm\">\n                                {userName}: {message.content}\n                            </p>\n                        }\n                    })}\n                </div>\n\n                <div className=\"transcript-fade\" />\n            </section>\n        </section>\n    )\n}\n\nexport default CompanionComponent"],"names":[],"mappings":"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","debugId":null}}]
}